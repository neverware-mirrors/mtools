.TH mdir 1 "13aug97" mtools-3.8
.SH Name
mdir - display an MSDOS directory
'\" t
.de TQ
.br
.ns
.TP \\$1
..

.tr \(is'
.tr \(if`
.tr \(pd"

.SH Note
This manpage has been automatically generated from mtools's texinfo
documentation.  However, this process is only approximative, and some
items, such as crossreferences, footnotes and indices are lost in this
translation process.  Indeed, this items have no appropriate
representation in the manpage format.  Moreover, only the items specific
to each command have been translated, and the general information about
mtools has been dropped in the manpage version.  Thus I strongly advise
you to use the original texinfo doc.
.TP
* \ \ 
To generate a printable copy from the texinfo doc, run the following
commands:
 
.nf
.ft 3
.in +0.3i
    ./configure; make dvi; dvips mtools.dvi
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.TP
* \ \ 
To generate a html copy,  run:
 
.nf
.ft 3
.in +0.3i
    ./configure; make html
.fi
.in -0.3i
.ft R
.lp
 
\&\fRA premade html can be found at:
\&\fR\&\f(CW\(ifhttp://www.tux.org/pub/knaff/mtools\(is\fR
.TP
* \ \ 
To generate an info copy (browsable using emacs' info mode), run:
 
.nf
.ft 3
.in +0.3i
    ./configure; make info
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
The texinfo doc looks most pretty when printed or as html.  Indeed, in
the info version certain examples are difficult to read due to the
quoting conventions used in info.
.PP
.SH Description
.iX "p mdir"
.iX "c Read-only files (listing them)"
.iX "c Listing a directory"
.iX "c Directory listing"
.PP
The \fR\&\f(CWmdir\fR command is used to display an MS-DOS directory. Its
syntax is:
.PP
\&\fR\&\f(CWmdir\fR [\fR\&\f(CW-/\fR] [\fR\&\f(CW-f\fR] [\fR\&\f(CW-w\fR] [\fR\&\f(CW-a\fR] [\fR\&\f(CW-X\fR] \fImsdosfile\fR [ \fImsdosfiles\fR\&...] 
.PP
\&\fR\&\f(CWMdir\fR
displays the contents of MS-DOS directories, or the entries for some
MS-DOS files.
.PP
\&\fR\&\f(CWMdir\fR supports the following command line options:
.TP
\&\fR\&\f(CW/\fR\ 
Recursive output, just like Dos' \fR\&\f(CW-s\fR option
.TP
\&\fR\&\f(CWw\fR\ 
Wide output.  With this option, \fR\&\f(CWmdir\fR prints the filenames across
the page without displaying the file size or creation date.
.TP
\&\fR\&\f(CWa\fR\ 
Also list hidden files.
.TP
\&\fR\&\f(CWf\fR\ 
Fast.  Do not try to find out free space.  On larger disks, finding out
the amount of free space takes up some non trivial amount of time, as
the whole FAT must be read in and scanned.  The \fR\&\f(CW-f\fR flag bypasses
this step.  This flag is not needed on FAT32 filesystems, which store
the size explicitely.
.TP
\&\fR\&\f(CWX\fR\ 
Concise listing.  List only a newline separated list of pathnames
without any decoration nor additional information
.PP
An error occurs if a component of the path is not a directory.
.PP
.SH Description
.iX "p mdu"
.iX "c Space occupied by directories and files"
.iX "c du"
.iX "c Listing space occupied by directories and files"
.iX "c Occupation of space by directories and files"
.PP
\&\fR\&\f(CWMdu\fR is used to list the space occupied by a directory, its
subdirectories and its files. It is similar to the \fR\&\f(CWdu\fR command on
Unix.  The unit used are clusters.  Use the minfo command to find out
the cluster size.
.PP
\&\fR\&\f(CWmdu\fR [\fR\&\f(CW-a\fR] [ \fImsdosfiles\fR \&... ]
.TP
\&\fR\&\f(CWa\fR\ 
All files.  List also the space occupied for individual files.
.TP
\&\fR\&\f(CWs\fR\ 
Only list the total space, don't give details for each subdirectory.
.PP
.SH Description
.iX "p mformat"
.iX "c Initializing disks"
.iX "c Formatting disks"
.iX "c Filesystem creation"
.PP
The \fR\&\f(CWmformat\fR command is used to add an MS-DOS filesystem to a
low-level formatted diskette. Its syntax is:
.PP
.(l I
\&\fR\&\f(CWmformat\fR [\fR\&\f(CW-t\fR \fIcylinders\fR] [\fR\&\f(CW-h\fR \fIheads\fR]
[\fR\&\f(CW-s\fR \fIsectors\fR] [\fR\&\f(CW-l\fR \fIvolume_label\fR] [\fR\&\f(CW-F\fR]
[\fR\&\f(CW-I\fR \fIfsVersion\fR] [\fR\&\f(CW-S\fR \fIsizecode\fR] [\fR\&\f(CW-2\fR
\&\fIsectors_on_track_0\fR] [\fR\&\f(CW-M\fR \fIsoftware_sector_size\fR]
[\fR\&\f(CW-a\fR] [\fR\&\f(CW-X\fR] [\fR\&\f(CW-C\fR] [\fR\&\f(CW-H\fR \fIhidden_sectors\fR]
[\fR\&\f(CW-r\fR \fIroot_sectors\fR] [\fR\&\f(CW-B\fR \fIboot_sector\fR]
[\fR\&\f(CW-k\fR] \fIdrive:\fR
.)l
 
.PP
\&\fR\&\f(CWMformat\fR adds a minimal MS-DOS filesystem (boot sector, FAT, and
root directory) to a diskette that has already been formatted by a Unix
low-level format.
.PP
The following options are supported: (The S, 2, 1 and M options may not
exist if this copy of mtools has been compiled without the USE_2M
option)
.PP
.SH Options
.TP
\&\fR\&\f(CWt\fR\ 
The number of cylinders.
.TP
\&\fR\&\f(CWh\fR\ 
The number of heads (sides).
.TP
\&\fR\&\f(CWs\fR\ 
The number of sectors per track. If the 2m option is given, number of
512-byte sector equivalents on generic tracks (i.e. not head 0 track 0).
If the 2m option is not given, number of physical sectors per track
(which may be bigger than 512 bytes).
.TP
\&\fR\&\f(CWl\fR\ 
An optional volume label.
.TP
\&\fR\&\f(CWS\fR\ 
The sizecode. The size of the sector is 2 ^ (sizecode + 7).
.TP
\&\fR\&\f(CW2\fR\ 
2m format. The parameter to this option describes the number of
sectors on track 0, head 0. This option is recommended for sectors
bigger than normal.
.TP
\&\fR\&\f(CW1\fR\ 
don't use a 2m format, even if the current geometry of the disk is a 2m 
geometry.
.TP
\&\fR\&\f(CWM\fR\ 
software sector size. This parameter describes the sector size in bytes used
by the MS-DOS filesystem. By default it is the physical sector size.
.TP
\&\fR\&\f(CWa\fR\ 
If this option is given, an Atari style serial number is generated.
Ataris store their serial number in the OEM label.
.TP
\&\fR\&\f(CWX\fR\ 
formats the disk as an XDF disk. See section XDF for more details. The
disk has first to be low-level formatted using the xdfcopy utility
included in the fdutils package.
.TP
\&\fR\&\f(CWC\fR\ 
creates the disk image file to install the MS-DOS filesystem on
it. Obviously, this is useless on physical devices such as floppies
and hard disk partitions.
.TP
\&\fR\&\f(CWH\fR\ 
number of hidden sectors. This parameter is useful for formatting hard
disk partition, which are not aligned on track boundaries (i.e. first
head of first track doesn't belong to the partition, but contains a
partition table). In that case the number of hidden sectors is in
general the number of sectors per cylinder. This is untested.
.TP
\&\fR\&\f(CWn\fR\ 
serial number
.TP
\&\fR\&\f(CWF\fR\ 
Format the partition as FAT32 (experimental).
.TP
\&\fR\&\f(CWI\fR\ 
Sets the fsVersion id when formatting a FAT32 drive.  In order to find
this out, run minfo on an existing FAT32 drive, and mail me about it, so
I can include the correct value in future versions of mtools.
.TP
\&\fR\&\f(CWc\fR\ 
Sets the size of a cluster (in sectors).  If this cluster size would
generate a FAT that too big for its number of bits, mtools automatically
increases the cluster size, until the FAT is small enough.
.TP
\&\fR\&\f(CWr\fR\ 
Sets the size of the root directory (in sectors).  Only applicable to 12
and 16 bit FATs.
.TP
\&\fR\&\f(CWB\fR\ 
Use the bootsector stored in the given file or device, instead of using
its own.  Only the geometry fields are updated to match the target disks
parameters.
.TP
\&\fR\&\f(CWk\fR\ 
Keep the existing boot sector as much as possible.  Only the geometry
fields are updated to match the target disks parameters.
.PP
To format a diskette at a density other than the default, you must supply
(at least) those command line parameters that are different from the
default.
.PP
\&\fR\&\f(CWMformat\fR returns 0 on success or 1 on failure.
.PP
It doesn't record bad block information to the Fat, use
\&\fR\&\f(CWmkmanifest\fR for that.
.PP
.SH Description
.iX "p mkmanifest"
.iX "c packing list"
.PP
The \fR\&\f(CWmkmanifest\fR command is used to create a shell script (packing
list) to restore Unix filenames. Its syntax is:
.PP
\&\fR\&\f(CWmkmanifest\fR [ \fIfiles\fR ]
.PP
\&\fR\&\f(CWMkmanifest\fR creates a shell script that aids in the restoration of
Unix filenames that got clobbered by the MS-DOS filename restrictions.
MS-DOS filenames are restricted to 8 character names, 3 character
extensions, upper case only, no device names, and no illegal characters.
.PP
The mkmanifest program is compatible with the methods used in
\&\fR\&\f(CWpcomm, arc,\fR and \fR\&\f(CWmtools\fR to change perfectly good Unix
filenames to fit the MS-DOS restrictions. This command is only useful if
the target system which will read the diskette cannot handle vfat long
names.
.PP
.SH Example
You want to copy the following Unix files to a MS-DOS diskette (using the
\&\fR\&\f(CWmcopy\fR command).
.PP
 
.nf
.ft 3
.in +0.3i
  very_long_name
  2.many.dots
  illegal:
  good.c
  prn.dev
  Capital
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
\&\fR\&\f(CWMcopy\fR
converts the names to:
.PP
 
.nf
.ft 3
.in +0.3i
  very_lon
  2xmany.dot
  illegalx
  good.c
  xprn.dev
  capital
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
The command:
 
.nf
.ft 3
.in +0.3i
mkmanifest very_long_name 2.many.dots illegal: good.c prn.dev Capital >manifest
.fi
.in -0.3i
.ft R
.lp
 
\&\fRwould produce the following:
 
.nf
.ft 3
.in +0.3i
  mv very_lon very_long_name
  mv 2xmany.dot 2.many.dots
  mv illegalx illegal:
  mv xprn.dev prn.dev
  mv capital Capital
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
Notice that "good.c" did not require any conversion, so it did not
appear in the output.
.PP
Suppose I've copied these files from the diskette to another Unix
system, and I now want the files back to their original names.  If the
file "manifest" (the output captured above) was sent along with those
files, it could be used to convert the filenames.
.PP
.SH Bugs
.PP
The short names generated by \fR\&\f(CWmkmanifest\fR follow the old convention
(from mtools-2.0.7) and not the one from Windows 95 and mtools-3.0.
.PP
.SH Description
.iX "p mlabel"
.iX "c mformat parameters"
.iX "c getting parameters of a Dos fs"
.PP
The \fR\&\f(CWminfo\fR command prints the parameters of a Dos filesystem, such
as number of sectors, heads and cylinders.  It also prints an mformat
command line which can be used to create a similar Dos filesystem on
another media.  However, this doesn't work with 2m or Xdf media, and
with Dos 1.0 filesystems
.(l I
\&\fR\&\f(CWminfo\fR \fIdrive\fR:
.)l
 
.PP
Mlabel supports the following option:
.TP
\&\fR\&\f(CWv\fR\ 
Prints a hexdump of the bootsector, in addition to the other information
.PP
.SH Description
.iX "p mlabel"
.iX "c Labeling a disk"
.iX "c Disk label"
.PP
The \fR\&\f(CWmlabel\fR command adds a volume label to a disk. Its syntax is:
.(l I
\&\fR\&\f(CWmlabel\fR [\fR\&\f(CW-vcs\fR] \fIdrive\fR:[\fInew_label\fR]
.)l
 
.PP
\&\fR\&\f(CWMlabel\fR displays the current volume label, if present. If
\&\fInew_label\fR is not given, and if neither the \fR\&\f(CWc\fR nor the
\&\fR\&\f(CWs\fR options are set, it prompts the user for a new volume label.
To delete an existing volume label, press return at the prompt.
.PP
Reasonable care is taken to create a valid MS-DOS volume label.  If an
invalid label is specified, \fR\&\f(CWmlabel\fR changes the label (and
displays the new label if the verbose mode is set). \fR\&\f(CWMlabel\fR
returns 0 on success or 1 on failure.
.PP
Mlabel supports the following options:
.TP
\&\fR\&\f(CWc\fR\ 
Clears an existing label, without prompting the user
.TP
\&\fR\&\f(CWs\fR\ 
Shows the existing label, without prompting the user.
.PP
.SH Description
.iX "p mmd"
.iX "c Making a directory"
.iX "c Creating a directory"
.iX "c Directory creation"
.iX "c Subdirectory creation"
.PP
The \fR\&\f(CWmmd\fR command is used to make an MS-DOS subdirectory. Its
syntax is:
.PP
\&\fR\&\f(CWmmd\fR [\fR\&\f(CW-voOsSrRA\fR] \fImsdosdirectory\fR [
\&\fImsdosdirectories\fR\&... ]
.PP
\&\fR\&\f(CWMmd\fR makes a new directory on an MS-DOS filesystem. An error occurs
if the directory already exists.
.PP
.SH Description
.iX "p mmount"
.iX "c Linux enhancements (mmount)"
.iX "c Mounting a disk"
.iX "c High capacity formats, mounting"
.PP
The \fR\&\f(CWmmount\fR command is used to mount an MS-DOS disk. It is only
available on Linux, as it is only useful if the OS kernel allows to
configure the disk geometry. Its syntax is:
.PP
\&\fR\&\f(CWmmount\fR \fImsdosdrive\fR [\fImountargs\fR]
.PP
\&\fR\&\f(CWMmount\fR
reads the boot sector of an MS-DOS disk, configures the drive geometry,
and finally mounts it passing
\&\fR\&\f(CWmountargs\fR to \fR\&\f(CWmount. \fR
If no mount arguments are specified, the name of the device is
used. If the disk is write protected, it is automatically mounted read
only.
.PP
.SH Description
.iX "p mmove"
.iX "c Moving files (mmove)"
.iX "c Renaming files (mmove)"
.PP
The \fR\&\f(CWmmove\fR command is used to moves or renames an existing MS-DOS
file or subdirectory.
.(l I
\&\fR\&\f(CWmmove\fR [\fR\&\f(CW-voOsSrRA\fR] \fIsourcefile\fR \fItargetfile\fR
\&\fR\&\f(CWmmove\fR [\fR\&\f(CW-voOsSrRA\fR] \fIsourcefile\fR [ \fIsourcefiles\fR\&... ] \fItargetdirectory\fR
.)l
 
\&\fR\&\f(CWMmove\fR moves or renames an existing MS-DOS file or
subdirectory. Unlike the MS-DOS version of \fR\&\f(CWMOVE\fR, \fR\&\f(CWmmove\fR is
able to move subdirectories.
.PP
.SH Description
.iX "p mpartition"
.iX "c partitions (creating)"
.iX "c Zip disks (partitioning them)"
.iX "c Jaz disks (partitioning them)"
.PP
The \fR\&\f(CWmpartition\fR command is used to create MS-DOS filesystems as
partitions.  This is intended to be used on non-Linux systems,
i.e. systems where fdisk and easy access to Scsi devices are not
available.  This command only works on drives whose partition variable
is set.
.PP
.(l I
\&\fR\&\f(CWmpartition\fR \fR\&\f(CW-p\fR \fIdrive\fR
\&\fR\&\f(CWmpartition\fR \fR\&\f(CW-r\fR \fIdrive\fR
\&\fR\&\f(CWmpartition\fR \fR\&\f(CW-I\fR \fIdrive\fR
\&\fR\&\f(CWmpartition\fR \fR\&\f(CW-a\fR \fIdrive\fR
\&\fR\&\f(CWmpartition\fR \fR\&\f(CW-d\fR \fIdrive\fR
\&\fR\&\f(CWmpartition\fR \fR\&\f(CW-c\fR [\fR\&\f(CW-s\fR \fIsectors\fR] [\fR\&\f(CW-h\fR \fIheads\fR]
[\fR\&\f(CW-t\fR \fIcylinders\fR] [\fR\&\f(CW-v\fR [\fR\&\f(CW-T\fR \fItype\fR] [\fR\&\f(CW-b\fR
\&\fIbegin\fR] [\fR\&\f(CW-l\fR length] [\fR\&\f(CW-f\fR]
\&\&
.)l
 
.PP
Mpartition supports the following operations:
.TP
\&\fR\&\f(CWp\fR\ 
Prints a command line to recreate the partition for the drive.  Nothing
is printed if the partition for the drive is not defined, or an
inconsistency has been detected.  If verbose (\fR\&\f(CW-v\fR) is also set,
prints the current partition table.
.TP
\&\fR\&\f(CWr\fR\ 
Removes the partition described by \fIdrive\fR.
.TP
\&\fR\&\f(CWI\fR\ 
Initializes the partition table, and removes all partitions.
.TP
\&\fR\&\f(CWc\fR\ 
Creates the partition described by \fIdrive\fR.
.TP
\&\fR\&\f(CWa\fR\ 
"Activates" the partition, i.e. makes it bootable.  Only one partition
can be bootable at a time.
.TP
\&\fR\&\f(CWd\fR\ 
"Desactivates" the partition, i.e. makes it unbootable.
.PP
If no operation is given, the current settings are printed.
.PP
For partition creations, the following options are available:
.TP
\&\fR\&\f(CWs\ \fIsectors\fR\&\f(CW\fR\ 
The number of sectors per track of the partition (which is also the
number of sectors per track for the whole drive).
.TP
\&\fR\&\f(CWh\ \fIheads\fR\&\f(CW\fR\ 
The number of heads of the partition (which is also the number of heads
for the whole drive).  By default, the geometry information (number of
sectors and heads) is figured out from neighbouring partition table
entries, or guessed from the size.
.TP
\&\fR\&\f(CWt\ \fIcylinders\fR\&\f(CW\fR\ 
The number of cylinders of the partition (not the number of cylinders of
the whole drive.
.TP
\&\fR\&\f(CWb\ \fIbegin\fR\&\f(CW\fR\ 
The starting offset of the partition, expressed in sectors. If begin is
not given, mpartition lets the partition begin at the start of the disk
(partition number 1), or immediately after the end of the previous
partition.
.TP
\&\fR\&\f(CWl\ \fIlength\fR\&\f(CW\fR\ 
The size (length) of the partition, expressed in sectors.  If end is not
given, mpartition figures out the size from the number of sectors, heads
and cylinders.  If these are not given either, it gives the partition
the biggest possible size, considering disk size and start of the next
partition.
.PP
The following option is available for all operation which modify the
partition table:
.TP
\&\fR\&\f(CWf\fR\ 
Usually, before writing back any changes to the partition, mpartition
performs certain consistenct checks, such as checking for overlaps and
proper alignment of the partitions.  If any of these checks fails, the
partition table is not changes.  The \fR\&\f(CW-f\fR allows you to override
these safeguards.
.PP
The following option is available for all operations:
.TP
\&\fR\&\f(CWv\fR\ 
Together with \fR\&\f(CW-p\fR prints the partition table as it is now (no
change operation), or as it is after it is modified.
.TP
\&\fR\&\f(CWvv\fR\ 
If the verbosity flag is given twice, mpartition will print out a
hexdump of the partition table when reading it from and writing it to
the device.
.PP
.SH Description
.iX "p mrd"
.iX "c Removing a directory"
.iX "c Erasing a directory"
.iX "c Deleting a directory"
.iX "c Directory removing"
.iX "c Subdirectory removing"
.PP
The \fR\&\f(CWmrd\fR command is used to remove an MS-DOS subdirectory. Its
syntax is:
.PP
.(l I
\&\fR\&\f(CWmrd\fR [\fR\&\f(CW-v\fR] \fImsdosdirectory\fR [ \fImsdosdirectories\fR\&... ]
.)l
 
.PP
\&\fR\&\f(CWMrd\fR removes a directory from an MS-DOS filesystem. An error occurs
if the directory does not exist or is not empty.
.PP
.SH Description
.iX "p mren"
.iX "c Renaming files (mren)"
.iX "c Moving files (mren)"
.PP
The \fR\&\f(CWmren\fR command is used to rename or move an existing MS-DOS
file or subdirectory. Its syntax is:
.PP
.(l I
\&\fR\&\f(CWmren\fR [\fR\&\f(CW-voOsSrRA\fR] \fIsourcefile\fR \fItargetfile\fR
.)l
 
.PP
\&\fR\&\f(CWMren\fR
renames an existing file on an MS-DOS filesystem.
.PP
In verbose mode, \fR\&\f(CWMren\fR displays the new filename if the name
supplied is invalid.
.PP
If the first syntax is used (only one sourcefile), and if the target
name doesn't contain any slashes or colons, the file (or subdirectory)
is renamed in the same directory, instead of being moved to the current
\&\fR\&\f(CWmcd\fR directory as would be the case with \fR\&\f(CWmmove\fR. Unlike the
MS-DOS version of \fR\&\f(CWREN\fR, \fR\&\f(CWmren\fR can be used to rename
directories.
.PP
.SH Description
.iX "p mshowfat"
.iX "c Clusters of a file"
.iX "c Fat"
.PP
The \fR\&\f(CWmshowfat\fR command is used to display the FAT entries for a
file.  Syntax:
.PP
.(l I
\&\fR\&\f(CW$ mshowfat files\fR
.)l
 
.PP
.SH Description
.iX "p mtoolstest"
.iX "c Testing configuration file for correctness"
.iX "c Checking configuration file"
.iX "c Verifying configuration file"
.PP
The \fR\&\f(CWmtoolstest\fR command is used to tests the mtools configuration
files. To invoke it, just type \fR\&\f(CWmtoolstest\fR without any arguments.
\&\fR\&\f(CWMtoolstest\fR reads the mtools configuration files, and prints the
cumulative configuration to \fR\&\f(CWstdout\fR. The output can be used as a
configuration file itself (although you might want to remove redundant
clauses).  You may use this program to convert old-style configuration
files into new style configuration files.
.PP
.SH Description
.PP
The \fR\&\f(CWmtype\fR command is used to display contents of an MS-DOS
file. Its syntax is:
.PP
.(l I
\&\fR\&\f(CWmtype\fR [\fR\&\f(CW-ts\fR] \fImsdosfile\fR [ \fImsdosfiles\fR\&... ]
.)l
 
.PP
\&\fR\&\f(CWMtype\fR displays the specified MS-DOS file on the screen.
.PP
In addition to the standard options, \fR\&\f(CWMtype\fR allows the following
command line options:
.TP
\&\fR\&\f(CWt\fR\ 
Text file viewing.  \fR\&\f(CWMtype\fR translates incoming carriage
return/line feeds to line feeds.
.TP
\&\fR\&\f(CWs\fR\ 
\&\fR\&\f(CWMtype\fR strips the high bit from the data.
.PP
The \fR\&\f(CWmcd\fR command may be used to establish the device and the
current working directory (relative to MS-DOS), otherwise the default is
\&\fR\&\f(CWA:/\fR.
.PP
\&\fR\&\f(CWMtype\fR returns 0 on success, 1 on utter failure, or 2 on partial
failure.
.PP
Unlike the MS-DOS version of \fR\&\f(CWTYPE\fR, \fR\&\f(CWmtype\fR allows multiple
arguments.
.PP
.SH Description
.iX "c Zip disk (utilities)"
.iX "c Jaz disk (utilities)"
.iX "c Ejecting a Zip/Jaz disk"
.iX "c Write protecting a Zip/Jaz disk"
.iX "p mzip"
.iX "c ZipTools disk"
.iX "c Tools disk (Zip and Jaz drives)"
.iX "c APlaceForYourStuff"
.iX "c password protected Zip disks"
.PP
The \fR\&\f(CWmzip\fR command is used to issue ZIP disk specific commands on
Solaris or HPUX. Its syntax is:
.PP
.(l I
\&\fR\&\f(CWmzip\fR [\fR\&\f(CW-epqrwx\fR]
.)l
 
.PP
\&\fR\&\f(CWMzip\fR allows the following
command line options:
.TP
\&\fR\&\f(CWe\fR\ 
Ejects the disk.
.TP
\&\fR\&\f(CWf\fR\ 
Force eject even if the disk is mounted (must be given in addition to
\&\fR\&\f(CW-e\fR).
.TP
\&\fR\&\f(CWr\fR\ 
Write protect the disk.
.TP
\&\fR\&\f(CWw\fR\ 
Remove write protection.
.TP
\&\fR\&\f(CWp\fR\ 
Password write protect.
.TP
\&\fR\&\f(CWx\fR\ 
Password protect
.TP
\&\fR\&\f(CWu\fR\ 
Temporarily unprotect the disk until it is ejected.  The disk becomes
writable, and reverts back to its old state when ejected.
.TP
\&\fR\&\f(CWq\fR\ 
Queries the status
.PP
To remove the password, set it to one of the passwordless modes
\&\fR\&\f(CW-r\fR or \fR\&\f(CW-w\fR: mzip will then ask you for the password, and
unlock the disk.  If you have forgotten the password, you can get rid of
it by low-level formatting the disk (using your SCSI adaptor's BIOS
setup).
.PP
The ZipTools disk shipped with the drive is also password protected.  On
Dos or on a Mac, this password is automatically removed once the
ZipTools have been installed.  From various articles posted to Usenet, I
learned that the password for the tools disk is
\&\fR\&\f(CWAPlaceForYourStuff\fR\fR.  Mzip knows about this
password, and tries it first, before prompting you for a password.  Thus
\&\fR\&\f(CWmzip -w z:\fR unlocks the tools disk.  The tools disk is
formatted in a special way so as to be usable both in a PC and in a Mac.
On a PC, the Mac filesystem appears as a hidden file named
\&\fR\&\f(CW\(ifpartishn.mac\(is\fR.  You may erase it to reclaim the 50 Megs of space
taken up by the Mac filesystem.
.PP
.SH Description
.iX "c recursive copy"
.iX "c xcopy"
.iX "p xcopy"
.PP
The \fR\&\f(CWxcopy\fR script is used to recursively copy one directory to
another. Its syntax is:
.PP
.(l I
\&\fR\&\f(CWxcopy\fR \fIsourcedirectory\fR \fItargetdirectory\fR
.)l
 
.PP
If targetdirectory does not exist, it is created.  If it does exist, the
files of sourcedirectory are directly copied into it, and no
subdirectory called \fIsourcedirectory\fR is created, unlike with
\&\fR\&\f(CWcp -rf\fR.
.PP
.SH Bugs
.PP
This command is a big kludge.  A proper implementation would take a
rework of significant parts of mtools, but unfortunately I don't have
the time for this right now. The main downside of this implementation is
that it is inefficient on some architectures (several successive calls
to mtools, which defeats mtools' caching).
.SH See Also
Mtools' texinfo doc
